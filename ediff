#!/bin/sh

function usage () {
    echo "USAGE: $0 local remote [ base ] merged"
    echo "    local : local version of file to merge (--ours)."
    echo "    remote: remote version of file to merge (--theirs)."
    echo "    base  : common ancestor's version of the file to merge."
    echo "    merged: destination file."
}

##
# read arguments
#
if [ $# -lt 3 ]; then
    usage
    exit 1
fi

LOCAL="${1}"
REMOTE="${2}"
if [ $# -ge 4 ]; then
    BASE="${3}"; shift
fi
MERGED="${3}"
echo "LOCAL=$LOCAL"
echo "REMOTE=$REMOTE"
echo "BASE=$BASE"
echo "MERGED=$MERGED"

##
# check arguments
#
function file_must_exist () {
    if [ ! -f "${1}" ]; then
        echo "$0: '${1}': No such file."
        exit 2
    fi
}

file_must_exist "${LOCAL}"
file_must_exist "${REMOTE}"
test -z "${BASE}" || file_must_exist "${BASE}"

##
# OK RUN
#
if [ -z "${BASE}" ]; then
    CMD="ediff-merge-files \"${LOCAL}\" \"${REMOTE}\" nil"
else
    CMD="ediff-merge-files-with-ancestor \"${LOCAL}\" \"${REMOTE}\" \"${BASE}\" nil"
fi
emacs -Q --eval "(${CMD} \"${MERGED}\")"
